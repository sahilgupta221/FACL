#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = default_scenario
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 43200


## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 50

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 50

# "GuardianappInterface" interface between guardian and apps
GuardianappInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
GuardianappInterface.transmitSpeed = 250k
GuardianappInterface.transmitRange = 350

# "GuardianSMInterface" interface between guardian and sensor mote
GuardianSMInterface.type = SimpleBroadcastInterface
GuardianSMInterface.transmitSpeed = 10M
GuardianSMInterface.transmitRange = 50

# "GuardianRAInterface" interface between guardian and RA
GuardianRAInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
GuardianRAInterface.transmitSpeed = 250k
GuardianRAInterface.transmitRange = 350

# "RAappInterface" interface between guardian and RA
RAappInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
RAappInterface.transmitSpeed = 250k
RAappInterface.transmitRange = 50

# "RARSInterface" interface between guardian and RA
RARSInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
RARSInterface.transmitSpeed = 250k
RARSInterface.transmitRange = 250

# Define 6 different node groups
Scenario.nrofHostGroups = 8

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = StationaryMovement
Group.router = EpidemicRouter
Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300

Group.nrofHosts = 40
Group.guardiannumber = 2

# Define new application
pingApp.type = PingApplication
pingApp.interval = 500
pingApp.destinationRange = 0,18
pingApp.pingSize = 5
pingApp.pongSize = 5
pingApp.passive = false

# Set Ping app for all nodes
Group.nrofApplications = 1
Group.application1 = pingApp

# group1 (Malicious_app) specific settings
Group1.groupID = Malicious_app
Group1.bufferSize = 50M
Group1.movementModel = StationaryMovement
Group1.nodeLocation = 350, 100
Group1.nrofHosts = 1
Group1.nrofInterfaces = 2
Group1.interface1 = GuardianappInterface
Group1.interface2 = RAappInterface

# group2 specific settings
Group2.groupID = Normal_app
Group2.bufferSize = 50M
Group2.movementModel = StationaryMovement
Group2.nodeLocation = 300, 150
Group2.nrofHosts = 1
Group2.nrofInterfaces = 2
Group2.interface1 = GuardianappInterface
Group2.interface2 = RAappInterface

# another group of pedestrians
Group3.groupID = Dedicated_app
Group3.bufferSize = 50M
Group3.movementModel = StationaryMovement
Group3.nodeLocation = 350, 200
Group3.nrofHosts = 1
Group3.nrofInterfaces = 2
Group3.interface1 = GuardianappInterface
Group3.interface2 = RAappInterface

# The Tram groups
Group4.groupID = Authoritative_app
Group4.bufferSize = 50M
Group4.movementModel = StationaryMovement
Group4.nodeLocation = 400, 150
Group4.nrofHosts = 1
Group4.nrofInterfaces = 2
Group4.interface1 = GuardianappInterface
Group4.interface2 = RAappInterface

Group5.groupID = RS
Group5.bufferSize = 50M
Group5.nodeLocation = 200, 50
Group5.nrofHosts = 1
Group5.nrofInterfaces = 1
Group5.interface1 = RARSInterface

Group6.groupID = RA
Group6.bufferSize = 50M
Group6.nodeLocation = 350, 150
Group6.nrofInterfaces = 3
Group6.interface1 = RAappInterface
Group6.interface2 = RARSInterface
Group6.interface3 = GuardianRAInterface

Group7.groupID = Guardian
Group7.bufferSize = 50M
Group7.movementModel = LinearFormation
Group7.LinearFormation.startLocation = 250, 350
Group7.LinearFormation.endLocation = 850, 350
Group7.nrofHosts = 2
Group7.nrofInterfaces = 3
Group7.interface1 = GuardianappInterface
Group7.interface2 = GuardianSMInterface
Group7.interface3 = GuardianRAInterface

Group8.groupID = Sensor_motes
Group8.bufferSize = 50M
Group8.movementModel = SensorMoteMobilityModel
Group8.clusterRange = 50
Group8.startclusterCenter = 250, 350
Group8.endclusterCenter = 850, 350
Group8.nrofHosts = 10
Group8.nrofInterfaces = 1
Group8.interface1 = GuardianSMInterface

# energy settings
Group.initialEnergy = 5000
Group.scanEnergy = 0.1
Group.transmitEnergy = 0.2
Group.scanResponseEnergy = 0.1
Group.baseEnergy = 0.01

## Message creation parameters 
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 25,35
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,18
# Message ID prefix
Events1.prefix = M


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 8000, 8000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 2
Report.granularity =1000
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = EnergyLevelReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
